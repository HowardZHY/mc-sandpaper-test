buildscript {
    repositories {
        jcenter()

        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.cleanroommc.com' }
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "2.0.4"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

group = "me.jellysquid.mods"

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    mappings = "stable_22"
    runDir = "run"
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io/' }
    maven { url 'https://repo.spongepowered.org/maven' }
    maven {
        url "https://www.cursemaven.com"
    }
    maven { url = 'https://maven.minecraftforge.net' }
    maven {
        url 'https://maven.cleanroommc.com'
    }
    flatDir {
        dirs "libs"
    }
    mavenLocal()
}

configurations {
    include
    implementation.extendsFrom(include)
    configurations.runtimeOnly.canBeResolved = true
    shade
    compile.extendsFrom shade
}

dependencies {
    compile 'zone.rong:mixinbooter:8.8'
    //annotationProcessor("org.spongepowered:mixin:0.8.5:processor")
    include "org.spongepowered:mixin:0.7.11-SNAPSHOT"
}

apply plugin: "idea"

idea {
    module {
        downloadJavadoc = false
        downloadSources = false
        inheritOutputDirs = true
    }
}

def coreModManifest = {
    //attributes "FMLAT": "sandpaper_at.cfg"
    attributes "FMLCorePlugin": "cc.danielh.sandpaper.SandpaperMod"
    attributes "tweakClass": "org.spongepowered.asm.launch.MixinTweaker"
    attributes "TweakOrder": 0
}

jar {
    manifest coreModManifest

    from sourceSets.main.output

    rename '(.+_at.cfg)', 'META-INF/$1'

    enabled = false
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.sandpaper.refmap.json"
    //disableAnnotationProcessorCheck()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'

    manifest coreModManifest

    from sourceSets.main.allSource
}

processResources {
}

shadowJar {
    archiveName = jar.archiveName
    configurations = [project.configurations.include]
    compileJava.options.encoding = "UTF-8"
    exclude "native-binaries/*"
    exclude "META-INF/versions/**"

    dependencies {
        include(dependency("org.spongepowered:mixin:0.7.11-SNAPSHOT"))
    }
}

reobf {
    shadowJar {}
}

jar.dependsOn("shadowJar")

build.dependsOn shadowJar